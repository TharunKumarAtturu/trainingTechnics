// framework to write the data into a file and read the data from the file.
//.........................................................................
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include "framwork_file.c"
 
void exitFromMainMenu();
void showMainMenu();
int get_count_of_fields();
void create();
void read();



FILE *fp_menu;
FILE *fp_fields;
FILE *fp_data;
int fields_count = 0;
int counter = 0;
int main() {
    fields_count = get_count_of_fields(fp_fields, counter);
    showMainMenu(fp_menu, fp_fields, fp_data, fields_count);
}




void showMainMenu(FILE *fp_menu, FILE *fp_fields, FILE *fp_data, int fields_count) {
    fp_menu = fopen( FILE_MENU, "r");
    char menu_line[LENGTH_OF_FIELD];
    if (fp_menu == NULL) {
        printf("ERROR!");
    }
    else{
        while (fgets(menu_line, sizeof(menu_line), fp_menu) > 0 ) {
            
            printf("%s", menu_line);
        }
    }
    int option;
    while(1) {
        printf("\nEnter the option: ");
        scanf("%d", &option);
        switch(option) {
            case 1:
            create(fp_fields, fp_data, fields_count);
            break;
            case 2: 
            read(fp_data, fields_count);
            break;
            case 3:
            exitFromMainMenu();
            break;
            default:
            printf("Invalid option!");
            break;
        }
    }
    fclose(fp_menu);
}


int get_count_of_fields(FILE *fp_fields, int counter) {
    counter = 0;
    char fields[LENGTH_OF_FIELD];
    fp_fields = fopen(FILE_FIELDS, "r");
    if (fp_fields == NULL) {
        printf("ERROR!");
        return 0;
    }
    else{
        while (fgets(fields, sizeof(fields), fp_fields) > 0 ){
            counter = counter + 1;
        }
        return counter;
        fclose(fp_fields);
    }    
}


void create(FILE *fp_fields, FILE *fp_data, int fields_count) {
    fp_fields = fopen (FILE_FIELDS, "r");
    char fields_name[LENGTH_OF_FIELD * fields_count];
    char field_valve[LENGTH_OF_FIELD];
    fp_data = fopen(FILE_DATA, "a");
    char records[LENGTH_OF_FIELD * fields_count];
while(fgets(fields_name, sizeof(fields_name), fp_fields) != 0 ) {
    fields_name[strlen(fields_name) - 1] = '\0';
    printf("Enter %s: ", fields_name);
    fflush(stdin);
    gets(field_valve);
    fwrite(field_valve, 20, 1, fp_data);
} 
fclose(fp_data);
fclose(fp_fields);
}


void read(FILE *fp_data, int fields_count) {
    printf("FILE VALEVES FROM READ BEFORE FOPEN.\n");
    fp_data = fopen(FILE_DATA, "r");
    int counter = 0;
    char records[LENGTH_OF_FIELD * fields_count];
    char record[LENGTH_OF_FIELD];
    while(fread(record, LENGTH_OF_FIELD, 1, fp_data) > 0) {
        printf("%s ", record);
        counter = counter + 1;
        if(counter == fields_count) {
            printf("\n");
            counter = 0;
        }
    }

    fclose(fp_data);
}



void exitFromMainMenu() {
    printf("THANK YOU.");
    exit(0);
